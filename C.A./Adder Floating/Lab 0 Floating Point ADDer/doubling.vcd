$date
	Wed Jan 15 00:08:21 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module top $end
$var wire 1 ! select1 $end
$var wire 16 " ans1 [15:0] $end
$var reg 16 # a [15:0] $end
$var reg 16 $ b [15:0] $end
$var reg 1 % cin $end
$var reg 1 & sgn $end
$scope module m2 $end
$var wire 1 & add_sub $end
$var wire 16 ' dataa [15:0] $end
$var wire 16 ( datab [15:0] $end
$var wire 5 ) siwz1 [4:0] $end
$var wire 1 ! select1 $end
$var wire 16 * result1 [15:0] $end
$var reg 17 + result [16:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx +
bx *
b10000 )
bx (
bx '
x&
x%
bx $
bx #
bx "
x!
$end
#10
0!
b0 "
b0 *
b0 +
0%
b0 $
b0 (
b0 #
b0 '
#20
b1 "
b1 *
b1 +
b1 #
b1 '
1&
#30
b110 "
b110 *
b110 +
b11 $
b11 (
b11 #
b11 '
#40
b10010 "
b10010 *
b10010 +
b111 $
b111 (
b1011 #
b1011 '
#50
b1100011110 "
b1100011110 *
b1100011110 +
b1111 $
b1111 (
b1100001111 #
b1100001111 '
#60
b1100111110 "
b1100111110 *
b1100111110 +
b101111 $
b101111 (
#70
b1110011010 "
b1110011010 *
b1110011010 +
b10001011 $
b10001011 (
#80
b1100101100 "
b1100101100 *
b1100101100 +
b11101 $
b11101 (
#90
b1101011110 "
b1101011110 *
b1101011110 +
b1001111 $
b1001111 (
#100
b10110011 "
b10110011 *
b10110011 +
b1011101 $
b1011101 (
b1010110 #
b1010110 '
#110
b11010101011101 "
b11010101011101 *
b11010101011101 +
b1111110100101 $
b1111110100101 (
b1010110111000 #
b1010110111000 '
#120
b10110110011 "
b10110110011 *
b10110110011 +
0&
b1110101011000101 $
b1110101011000101 (
b1111000001111000 #
b1111000001111000 '
#130
b10110110100 "
b10110110100 *
b10110110100 +
b1100100 $
b1100100 (
b11000011000 #
b11000011000 '
#140
b10011111 "
b10011111 *
b10011111 +
b10001001101 $
b10001001101 (
b10011101100 #
b10011101100 '
#150
b10110110100 "
b10110110100 *
b10110110100 +
b1100100 $
b1100100 (
b11000011000 #
b11000011000 '
#160
1!
b1111110010110111 "
b1111110010110111 *
b11111110010110111 +
b100000110101 $
b100000110101 (
b10011101100 #
b10011101100 '
#170
